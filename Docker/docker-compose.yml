version: '3.8'

services:
    postgresql_database:
        container_name: finance_tracker_db
        image: postgres:latest
        environment:
            - POSTGRES_USER=admin
            - POSTGRES_PASSWORD=admin1234
            - POSTGRES_DB=finance_tracker_db
        ports: 
            - "5432:5432"
        restart: always
        volumes: 
            - database-data:/var/lib/postgresql/data/
        networks:
            - app-network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U admin -d finance_tracker_db"]
            interval: 5s
            timeout: 5s
            retries: 5

    backend:
        container_name: finance_tracker_be
        build: 
            context: ../BE
            dockerfile: Dockerfile
        environment:
            - NODE_ENV=development
            - DB_USER=admin
            - DB_PASSWORD=admin1234
            - DB_NAME=finance_tracker_db
            - DB_HOST=postgresql_database
            - DB_PORT=5432
            - PORT=8000
        ports:
            - "8000:8000"
        depends_on:
            postgresql_database:
                condition: service_healthy
        volumes:
            - ../BE:/app
            - /app/node_modules
        networks:
            - app-network
        restart: unless-stopped

    frontend:
        container_name: finance_tracker_fe
        build:
            context: ../FE
            dockerfile: Dockerfile
        ports:
            - "3000:3000"
        volumes:
            - ../FE:/app
            - /app/node_modules
        environment:
            - NEXT_PUBLIC_API_URL=http://backend:8000
        depends_on:
            - backend
        networks:
            - app-network
        restart: unless-stopped

networks:
    app-network:
        driver: bridge

volumes:
    database-data: 